name: CI

on:
  pull_request:
    branches: [dev, main]
  push:
    branches: [dev, main]

jobs:
  ci-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: ${{ runner.os }}-node
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: npm ci
      - name: Generate test coverage
        run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage
      - name: Build package
        if: github.event_name == 'push'
        run: npm run build
      - name: Zip assetss
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r dist.zip ./dist
          zip -r coverage.zip ./coverage
      - name: Semantic release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}
      - name: Upload build artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: dist
  slackNotification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          #          SLACK_ICON_EMOJI: ':bell:'
          #          SLACK_CHANNEL: web-media
          #          SLACK_MESSAGE: 'New release Images :package: - ${{job.status}}'
          #          SLACK_USERNAME: Github
          #          SLACK_COLOR: ${{ job.status }}
          #          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: web-media
          SLACK_ICON: ':bell:'
          SLACK_USERNAME: ${{ github.actor }}
          SLACK_FOOTER: ''
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: 'Flex component release :release:'
          MSG_MINIMAL: 'commit'
#          SLACK_MESSAGE: 'Flex component release :release: : version: 1.22.0'
